{"ast":null,"code":"import * as api from '../api';\nimport { FETCH_ALL, CREATE } from './actionTypes.js';\nexport const addPrefences = preferences => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.addPrefences(preferences);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchPreferences = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPreferences(id);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","FETCH_ALL","CREATE","addPrefences","preferences","dispatch","data","type","payload","error","console","log","fetchPreferences","id"],"sources":["/home/lhakpa/Public/TravalHistory /client/src/actions/users.js"],"sourcesContent":["import * as api from '../api'\nimport {FETCH_ALL,CREATE} from './actionTypes.js'\n\n\n\nexport const addPrefences = preferences => async dispatch => {\n  try {\n    const { data } = await api.addPrefences(preferences)\n    dispatch({ type: CREATE, payload: data })\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const fetchPreferences = (id) => async dispatch => {\n  try {\n    const { data } = await api.fetchPreferences(id)\n    dispatch({ type: FETCH_ALL, payload: data })\n  } catch (error) {\n    console.log(error)\n  }\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,QAAQ;AAC7B,SAAQC,SAAS,EAACC,MAAM,QAAO,kBAAkB;AAIjD,OAAO,MAAMC,YAAY,GAAGC,WAAW,IAAI,MAAMC,QAAQ,IAAI;EAC3D,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMN,GAAG,CAACG,YAAY,CAACC,WAAW,CAAC;IACpDC,QAAQ,CAAC;MAAEE,IAAI,EAAEL,MAAM;MAAEM,OAAO,EAAEF;IAAK,CAAC,CAAC;EAC3C,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAIC,EAAE,IAAK,MAAMR,QAAQ,IAAI;EACxD,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMN,GAAG,CAACY,gBAAgB,CAACC,EAAE,CAAC;IAC/CR,QAAQ,CAAC;MAAEE,IAAI,EAAEN,SAAS;MAAEO,OAAO,EAAEF;IAAK,CAAC,CAAC;EAC9C,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}