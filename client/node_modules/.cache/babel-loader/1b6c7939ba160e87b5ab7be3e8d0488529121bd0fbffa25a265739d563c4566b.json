{"ast":null,"code":"import * as api from '../api';\nimport { ADD_MATCH, UPDATE_MATCH, GET_MATCH, GET_REQUEST } from './actionTypes.js';\nexport const createMatch = newMatch => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.addMatch(newMatch);\n    dispatch({\n      type: ADD_MATCH,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getRequest = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getRequest(id);\n    console.log('match book action. get request :', data);\n    dispatch({\n      type: GET_REQUEST,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getMatch = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getMatch(id);\n    console.log('match book action. get match  :', data);\n    dispatch({\n      type: GET_MATCH,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const update = (newMatch, id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updateMatch(newMatch, id);\n    dispatch({\n      type: UPDATE_MATCH,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","ADD_MATCH","UPDATE_MATCH","GET_MATCH","GET_REQUEST","createMatch","newMatch","dispatch","data","addMatch","type","payload","error","console","log","getRequest","id","getMatch","update","updateMatch"],"sources":["/home/lhakpa/Public/Book-matching/client/src/actions/matchBook.js"],"sourcesContent":["import * as api from '../api'\nimport {\n  ADD_MATCH,\n  UPDATE_MATCH,\n  GET_MATCH,\n  GET_REQUEST\n} from './actionTypes.js'\n\nexport const createMatch = newMatch => async dispatch => {\n  try {\n    const { data } = await api.addMatch(newMatch)\n    dispatch({ type: ADD_MATCH, payload: data })\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const getRequest = id => async dispatch => {\n  try {\n    const { data } = await api.getRequest(id)\n    console.log('match book action. get request :', data)\n    dispatch({ type: GET_REQUEST, payload: data })\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const getMatch = id => async dispatch => {\n  try {\n    const { data } = await api.getMatch(id)\n    console.log('match book action. get match  :', data)\n\n    dispatch({ type: GET_MATCH, payload: data })\n  } catch (error) {\n    console.log(error)\n  }\n}\nexport const update = (newMatch, id) => async dispatch => {\n  try {\n    const { data } = await api.updateMatch(newMatch, id)\n    dispatch({ type: UPDATE_MATCH, payload: data })\n  } catch (error) {\n    console.log(error)\n  }\n}\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,QAAQ;AAC7B,SACEC,SAAS,EACTC,YAAY,EACZC,SAAS,EACTC,WAAW,QACN,kBAAkB;AAEzB,OAAO,MAAMC,WAAW,GAAGC,QAAQ,IAAI,MAAMC,QAAQ,IAAI;EACvD,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,GAAG,CAACS,QAAQ,CAACH,QAAQ,CAAC;IAC7CC,QAAQ,CAAC;MAAEG,IAAI,EAAET,SAAS;MAAEU,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC9C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMG,UAAU,GAAGC,EAAE,IAAI,MAAMT,QAAQ,IAAI;EAChD,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,GAAG,CAACe,UAAU,CAACC,EAAE,CAAC;IACzCH,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEN,IAAI,CAAC;IACrDD,QAAQ,CAAC;MAAEG,IAAI,EAAEN,WAAW;MAAEO,OAAO,EAAEH;IAAK,CAAC,CAAC;EAChD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMK,QAAQ,GAAGD,EAAE,IAAI,MAAMT,QAAQ,IAAI;EAC9C,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,GAAG,CAACiB,QAAQ,CAACD,EAAE,CAAC;IACvCH,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEN,IAAI,CAAC;IAEpDD,QAAQ,CAAC;MAAEG,IAAI,EAAEP,SAAS;MAAEQ,OAAO,EAAEH;IAAK,CAAC,CAAC;EAC9C,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AACD,OAAO,MAAMM,MAAM,GAAG,CAACZ,QAAQ,EAAEU,EAAE,KAAK,MAAMT,QAAQ,IAAI;EACxD,IAAI;IACF,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,GAAG,CAACmB,WAAW,CAACb,QAAQ,EAAEU,EAAE,CAAC;IACpDT,QAAQ,CAAC;MAAEG,IAAI,EAAER,YAAY;MAAES,OAAO,EAAEH;IAAK,CAAC,CAAC;EACjD,CAAC,CAAC,OAAOI,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}