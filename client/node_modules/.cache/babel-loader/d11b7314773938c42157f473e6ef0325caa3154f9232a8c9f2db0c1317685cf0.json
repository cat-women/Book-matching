{"ast":null,"code":"var _jsxFileName = \"/home/lhakpa/Public/TravalHistory /client/src/components/preferences/preferences.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Typography, Paper, TextField } from '@material-ui/core';\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded';\nimport { useDispatch, useSelector } from 'react-redux';\nimport makeStyles from './styles.js';\nimport { addPrefences } from '../../actions/preferences.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Preferences = () => {\n  _s();\n  const user = JSON.parse(localStorage.getItem('profile')).result;\n  const [postData, setPostData] = useState({\n    userId: user._id,\n    keywords: ''\n  });\n  const classes = makeStyles();\n  const dispatch = useDispatch();\n  const preferences = useSelector(state => state.preferences.preferences);\n  console.log(preferences);\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addPrefences(postData));\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: preferences ? preferences.preferences.map(item => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Add Your Preferences\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"keyword\",\n        variant: \"outlined\",\n        label: \"Preferences\",\n        value: postData.keywords,\n        fullWidth: true,\n        onChange: e => setPostData({\n          ...postData,\n          keywords: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: /*#__PURE__*/_jsxDEV(AddCircleRoundedIcon, {\n          className: classes.addIcon,\n          sx: {\n            width: '3rem',\n            height: '2rem',\n            marginTop: '0.3rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Preferences, \"d8QhTW80rlE6ifS8jI79Sx/Toc8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Preferences;\nexport default Preferences;\nvar _c;\n$RefreshReg$(_c, \"Preferences\");","map":{"version":3,"names":["React","useState","Button","Typography","Paper","TextField","AddCircleRoundedIcon","useDispatch","useSelector","makeStyles","addPrefences","Preferences","user","JSON","parse","localStorage","getItem","result","postData","setPostData","userId","_id","keywords","classes","dispatch","preferences","state","console","log","handleSubmit","e","preventDefault","paper","map","item","root","form","target","value","buttonSubmit","addIcon","width","height","marginTop"],"sources":["/home/lhakpa/Public/TravalHistory /client/src/components/preferences/preferences.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Button, Typography, Paper, TextField } from '@material-ui/core'\nimport AddCircleRoundedIcon from '@mui/icons-material/AddCircleRounded'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport makeStyles from './styles.js'\nimport { addPrefences } from '../../actions/preferences.js'\n\nconst Preferences = () => {\n  const user = JSON.parse(localStorage.getItem('profile')).result\n  const [postData, setPostData] = useState({ userId: user._id, keywords: '' })\n\n  const classes = makeStyles()\n  const dispatch = useDispatch()\n  const preferences = useSelector(state => state.preferences.preferences)\n\n  console.log(preferences)\n  const handleSubmit = e => {\n    e.preventDefault()\n    dispatch(addPrefences(postData))\n  }\n\n  return (\n    <Paper className={classes.paper}>\n      {preferences ? (\n        preferences.preferences.map(item => (\n          <p>{item}</p>\n        ))\n      ) : (\n        <form\n          autoComplete='off'\n          noValidate\n          className={`${classes.root} ${classes.form}`}\n          onSubmit={handleSubmit}\n        >\n          <Typography variant='h5'>Add Your Preferences</Typography>\n\n          <TextField\n            name='keyword'\n            variant='outlined'\n            label='Preferences'\n            value={postData.keywords}\n            fullWidth\n            onChange={e =>\n              setPostData({ ...postData, keywords: e.target.value })\n            }\n          />\n\n          <Button\n            className={classes.buttonSubmit}\n            variant='contained'\n            color='primary'\n            size='large'\n            type='submit'\n            fullWidth\n          >\n            <AddCircleRoundedIcon\n              className={classes.addIcon}\n              sx={{ width: '3rem', height: '2rem', marginTop: '0.3rem' }}\n            />\n          </Button>\n        </form>\n      )}\n    </Paper>\n  )\n}\n\nexport default Preferences\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,UAAU,EAAEC,KAAK,EAAEC,SAAS,QAAQ,mBAAmB;AACxE,OAAOC,oBAAoB,MAAM,sCAAsC;AACvE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAOC,UAAU,MAAM,aAAa;AACpC,SAASC,YAAY,QAAQ,8BAA8B;AAAA;AAE3D,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAACC,MAAM;EAC/D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC;IAAEmB,MAAM,EAAER,IAAI,CAACS,GAAG;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAE5E,MAAMC,OAAO,GAAGd,UAAU,EAAE;EAC5B,MAAMe,QAAQ,GAAGjB,WAAW,EAAE;EAC9B,MAAMkB,WAAW,GAAGjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACD,WAAW,CAACA,WAAW,CAAC;EAEvEE,OAAO,CAACC,GAAG,CAACH,WAAW,CAAC;EACxB,MAAMI,YAAY,GAAGC,CAAC,IAAI;IACxBA,CAAC,CAACC,cAAc,EAAE;IAClBP,QAAQ,CAACd,YAAY,CAACQ,QAAQ,CAAC,CAAC;EAClC,CAAC;EAED,oBACE,QAAC,KAAK;IAAC,SAAS,EAAEK,OAAO,CAACS,KAAM;IAAA,UAC7BP,WAAW,GACVA,WAAW,CAACA,WAAW,CAACQ,GAAG,CAACC,IAAI,iBAC9B;MAAA,UAAIA;IAAI;MAAA;MAAA;MAAA;IAAA,QACT,CAAC,gBAEF;MACE,YAAY,EAAC,KAAK;MAClB,UAAU;MACV,SAAS,EAAG,GAAEX,OAAO,CAACY,IAAK,IAAGZ,OAAO,CAACa,IAAK,EAAE;MAC7C,QAAQ,EAAEP,YAAa;MAAA,wBAEvB,QAAC,UAAU;QAAC,OAAO,EAAC,IAAI;QAAA,UAAC;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAa,eAE1D,QAAC,SAAS;QACR,IAAI,EAAC,SAAS;QACd,OAAO,EAAC,UAAU;QAClB,KAAK,EAAC,aAAa;QACnB,KAAK,EAAEX,QAAQ,CAACI,QAAS;QACzB,SAAS;QACT,QAAQ,EAAEQ,CAAC,IACTX,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEI,QAAQ,EAAEQ,CAAC,CAACO,MAAM,CAACC;QAAM,CAAC;MACtD;QAAA;QAAA;QAAA;MAAA,QACD,eAEF,QAAC,MAAM;QACL,SAAS,EAAEf,OAAO,CAACgB,YAAa;QAChC,OAAO,EAAC,WAAW;QACnB,KAAK,EAAC,SAAS;QACf,IAAI,EAAC,OAAO;QACZ,IAAI,EAAC,QAAQ;QACb,SAAS;QAAA,uBAET,QAAC,oBAAoB;UACnB,SAAS,EAAEhB,OAAO,CAACiB,OAAQ;UAC3B,EAAE,EAAE;YAAEC,KAAK,EAAE,MAAM;YAAEC,MAAM,EAAE,MAAM;YAAEC,SAAS,EAAE;UAAS;QAAE;UAAA;UAAA;UAAA;QAAA;MAC3D;QAAA;QAAA;QAAA;MAAA,QACK;IAAA;MAAA;MAAA;MAAA;IAAA;EAEZ;IAAA;IAAA;IAAA;EAAA,QACK;AAEZ,CAAC;AAAA,GAzDKhC,WAAW;EAAA,QAKEJ,WAAW,EACRC,WAAW;AAAA;AAAA,KAN3BG,WAAW;AA2DjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}